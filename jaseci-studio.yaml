apiVersion: v1
kind: Service
metadata:
  name: jaseci-studio-app
spec:
  selector:
    pod: jaseci-studio-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaseci-studio-up
  namespace: default
data:
  prod_up: |-
    apk add --update --no-cache git make g++
    apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python
    python3 -m ensurepip
    pip3 install --no-cache --upgrade pip setuptools
    git clone https://github.com/Jaseci-Labs/jaseci-webkit.git
    cd jaseci-webkit/builder;
    git config pull.ff only
    git checkout main
    yarn add npm-run-all --dev
    yarn install
    yarn install -D
 
    # create environment file
    echo "DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@jaseci-studio-db:5432/postgres" >> .env
    echo "SESSION_SECRET=somevalue" >> .env
    export DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@jaseci-studio-db:5432/postgres
    export SESSION_SECRET=somevalue
    yarn prisma migrate deploy
    # populate environment file
    yarn build
    yarn start &
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaseci-studio-app
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: jaseci-studio-app
  template:
    metadata:
      labels:
        pod: jaseci-studio-app
      name: jaseci-studio-app
    spec:
      containers:
        - name: jaseci-studio-app
          image: node:16-alpine
          imagePullPolicy: IfNotPresent
          command: [sh, -c, "source script/prod_up"]
          ports:
            - containerPort: 3000
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-config
                  key: username

            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-config
                  key: password

            - name: POSTGRES_HOST
              value: jaseci-studio-db

            - name: POSTGRES_PORT
              value: "5432"
            
            - name: NODE_ENV
              value: production

          volumeMounts:
            - name: prod-script
              mountPath: /script

      volumes:
        - name: prod-script
          configMap:
            name: jaseci-studio-up
---
kind: Service
apiVersion: v1
metadata:
  name: jaseci-studio-db
spec:
  selector:
    pod: jaseci-studio-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-config
type: Opaque
data:
  username: cG9zdGdyZXM=
  password: UHIwZE4xbmo0
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jaseci-studio-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaseci-studio-db
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: jaseci-studio-db
  template:
    metadata:
      labels:
        pod: jaseci-studio-db
    spec:
      containers:
        - name: jaseci-studio-db
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-config
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-config
                  key: password
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: jaseci-studio-db-volume
              mountPath: /var/lib/postgresql/data
              subPath: jaseci
      volumes:
        - name: jaseci-studio-db-volume
          persistentVolumeClaim:
            claimName: jaseci-studio-db-pvc