import { Button, Group, InputWrapper, Space, Title } from "@mantine/core";
import Editor from "@monaco-editor/react";
import "jsoneditor-react/es/editor.min.css";
import Head from "next/head";
import { useRef, useState } from "react";
import styles from "../styles/Home.module.css";
import AddComponentModal from "./components/AddComponentModal";

export default function Home() {
  const jscAppRef = useRef<any>();
  const [value, setValue] = useState("");
  const [showAddComponentModal, setShowAddComponentModal] = useState(false);

  const monacoRef = useRef(null);

  function handleEditorWillMount(monaco) {
    // here is the monaco instance
    // do something before editor is mounted
    monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);
  }

  function handleEditorDidMount(editor, monaco) {
    // here is another way to get monaco instance
    // you can also store it in `useRef` for further usage
    monacoRef.current = editor;
  }

  const runCode = () => {
    jscAppRef?.current?.setMarkup(JSON.parse(value));
  };

  const formatCode = () => {
    if (monacoRef?.current) {
      monacoRef?.current.getAction("editor.action.formatDocument").run();
    }
  };

  const onInsertComponent = (component: any) => {
    // remove the last square bracket
    setValue((value) => value.slice(0, value.length - 1));

    // add a square bracket to the beginning
    if (value[0] !== "[") {
      setValue((value) => "[" + value);
    }

    if (value.includes("}")) {
      setValue((value) => value + ",");
    }

    setValue((value) => {
      let newValue = "\n" + value + JSON.stringify(component) + "\n]";

      return newValue;
    });

    formatCode();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Jaseci Webkit Playground</title>
        <meta name="description" content="generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <script
          type="module"
          src="http://localhost:3333/build/components.esm.js"
          async
        ></script>
        <script
          noModule
          src="http://localhost:3333/build/components.js"
          async
        ></script>
        <link
          rel="stylesheet"
          href="http://localhost:3333/build/components.css"
        />
      </Head>

      <main>
        <Title order={3}>Editor</Title>
        <Space h="md"></Space>

        <Group>
          <Button onClick={formatCode}>Format</Button>
        </Group>
        <InputWrapper label="Enter Code">
          <Editor
            height="300px"
            defaultLanguage="json"
            theme="vs-dark"
            options={{ formatOnType: true, formatOnPaste: true }}
            defaultValue="// some comment"
            value={value}
            onChange={setValue}
            beforeMount={handleEditorWillMount}
            onMount={handleEditorDidMount}
          />
        </InputWrapper>

        <Space h="md"></Space>
        <Group>
          <Button onClick={runCode}>Run</Button>
          <Button onClick={() => setShowAddComponentModal(true)}>
            Add Component
          </Button>
        </Group>
        <Space h="lg"></Space>

        <Title order={3}>Preview</Title>
        <Space h="md"></Space>
        <jsc-app ref={jscAppRef}></jsc-app>
      </main>
      <AddComponentModal
        opened={showAddComponentModal}
        setOpened={setShowAddComponentModal}
        onInsertComponent={onInsertComponent}
      ></AddComponentModal>
    </div>
  );
}

declare global {
  namespace JSX {
    interface IntrinsicElements {
      "jsc-app": React.DetailedHTMLProps<
        React.HTMLAttributes<HTMLElement>,
        HTMLElement
      >; // Normal web component
    }
  }
}
